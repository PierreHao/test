name: "PVA-Net"
input: "data"
input_shape {
  dim: 1
  dim: 3
  dim: 192
  dim: 192
}

################################################################################
## Conv 1
################################################################################
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 16
    kernel_size: 3  pad: 1  stride: 2
    weight_filler { type: "xavier"  std: 0.1 }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 32
    kernel_size: 3  pad: 1  stride: 1
    weight_filler { type: "xavier"  std: 0.1 }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}

################################################################################
## Conv 2
################################################################################
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "conv1_2"
  top: "conv2_1"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 32
    kernel_size: 3  pad: 1  stride: 2
    weight_filler { type: "xavier"  std: 0.1 }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 64
    kernel_size: 3  pad: 1  stride: 1
    weight_filler { type: "xavier"  std: 0.1 }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}

################################################################################
## Conv 3
################################################################################
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "conv2_2"
  top: "conv3_1"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 64
    kernel_size: 3  pad: 1  stride: 2
    weight_filler { type: "xavier"  std: 0.1 }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 128
    kernel_size: 3  pad: 1  stride: 1
    weight_filler { type: "xavier"  std: 0.1 }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}

################################################################################
## Conv 4
################################################################################
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv4_1"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 128
    kernel_size: 3  pad: 1  stride: 2
    weight_filler { type: "xavier"  std: 0.1 }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 256
    kernel_size: 3  pad: 1  stride: 1
    weight_filler { type: "xavier"  std: 0.1 }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}

################################################################################
## Conv 5
################################################################################
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv5_1"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 256
    kernel_size: 3  pad: 1  stride: 2
    weight_filler { type: "xavier"  std: 0.1 }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 512
    kernel_size: 3  pad: 1  stride: 1
    weight_filler { type: "xavier"  std: 0.1 }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}

layer {
  name: "downsample"
  type: "Pooling"
  bottom: "conv3_2"
  top: "downsample"
  pooling_param {
    kernel_size: 3  pad: 0  stride: 2
    pool: MAX
  }
}
layer {
  name: "upsample"
  type: "Deconvolution"
  bottom: "conv5_2"
  top: "upsample"
  convolution_param {
    num_output: 512
    kernel_size: 4  pad: 1  stride: 2
    group: 512
    weight_filler: { type: "bilinear" } 
    bias_term: false
  }
  param { lr_mult: 1  decay_mult: 1 }
}
layer {
  name: "concat"
  type: "Concat"
  bottom: "downsample"
  bottom: "conv4_2"
  bottom: "upsample"
  top: "concat"
  concat_param { axis: 1 }
}
layer {
  name: "convf"
  type: "Convolution"
  bottom: "concat"
  top: "convf"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 512
    kernel_size: 1  pad: 0  stride: 1
    weight_filler { type: "xavier"  std: 0.1 }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "reluf"
  type: "ReLU"
  bottom: "convf"
  top: "convf"
}
layer {
  name: "poolf"
  type: "Pooling"
  bottom: "convf"
  top: "poolf"
  pooling_param {
    kernel_size: 2  pad: 0  stride: 2
    pool: MAX
  }
}

################################################################################
## fc 6
################################################################################
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "poolf"
  top: "fc6"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  inner_product_param {
    num_output: 4096
    weight_filler { type: "xavier"  std: 0.005 }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param { dropout_ratio: 0.5 }
}

################################################################################
## fc 7
################################################################################
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  inner_product_param {
    num_output: 4096
    weight_filler { type: "xavier"  std: 0.005 }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param { dropout_ratio: 0.5 }
}

################################################################################
## fc 8
################################################################################
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  inner_product_param {
    num_output: 21
    weight_filler { type: "xavier"  std: 0.1 }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "cls_prob"
  type: "Softmax"
  bottom: "cls_score"
  top: "cls_prob"
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
