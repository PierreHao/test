name: "PVA-Net"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
#  transform_param {
#    mirror: true
#    crop_size: 224
#    mean_file: "meta/imagenet/imagenet_mean.binaryproto"
#  }
# mean pixel / channel-wise mean instead of mean image
  transform_param {
    crop_size: 224
    mean_value: 104
    mean_value: 117
    mean_value: 123
    mirror: true
  }
  data_param {
    source: "data/imagenet/ilsvrc12_train_lmdb"
    batch_size: 32
    backend: LMDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
#  transform_param {
#    mirror: false
#    crop_size: 224
#    mean_file: "meta/imagenet/imagenet_mean.binaryproto"
#  }
# mean pixel / channel-wise mean instead of mean image
  transform_param {
    crop_size: 224
    mean_value: 104
    mean_value: 117
    mean_value: 123
    mirror: true
  }
  data_param {
    source: "data/imagenet/ilsvrc12_val_lmdb"
    batch_size: 32
    backend: LMDB
  }
}

################################################################################
## Conv 1
################################################################################
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 64
    kernel_size: 7  pad: 3  stride: 2
    weight_filler { type: "xavier"  std: 0.1 }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "drop1_1"
  type: "Dropout"
  bottom: "conv1_1"
  top: "conv1_1"
  dropout_param { dropout_ratio: 0.5  sample_weights_test: true }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_1_bn"
  type: "BatchNorm"
  bottom: "conv1_1"
  top: "conv1_1_bn"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_1_bn"
  top: "pool1_1"
  pooling_param { pool: MAX  kernel_size: 3  stride: 2 }
}



## Conv 2
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1_1"
  top: "conv2_1"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 64
    kernel_size: 1  pad: 0  stride: 1
    weight_filler { type: "xavier"  std: 0.1 }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "drop2_1"
  type: "Dropout"
  bottom: "conv2_1"
  top: "conv2_1"
  dropout_param { dropout_ratio: 0.5  sample_weights_test: true }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_1_bn"
  type: "BatchNorm"
  bottom: "conv2_1"
  top: "conv2_1_bn"
}


## Conv 3
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "conv2_1_bn"
  top: "conv3_1"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 96
    kernel_size: 5  pad: 2  stride: 2
    weight_filler { type: "xavier" }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "drop3_1"
  type: "Dropout"
  bottom: "conv3_1"
  top: "conv3_1"
  dropout_param { dropout_ratio: 0.5  sample_weights_test: true }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_1_bn"
  type: "BatchNorm"
  bottom: "conv3_1"
  top: "conv3_1_bn"
}

layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1_bn"
  top: "conv3_2"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 96
    kernel_size: 3  pad: 1  stride: 1
    weight_filler { type: "xavier" }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "drop3_2"
  type: "Dropout"
  bottom: "conv3_2"
  top: "conv3_2"
  dropout_param { dropout_ratio: 0.5 }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_2_bn"
  type: "BatchNorm"
  bottom: "conv3_2"
  top: "conv3_2_bn"
}

layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2_bn"
  top: "conv3_3"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 96
    kernel_size: 3  pad: 1  stride: 1
    weight_filler { type: "xavier" }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "drop3_3"
  type: "Dropout"
  bottom: "conv3_3"
  top: "conv3_3"
  dropout_param { dropout_ratio: 0.5 }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "conv3_3_bn"
  type: "BatchNorm"
  bottom: "conv3_3"
  top: "conv3_3_bn"
}

layer {
  name: "conv3_4"
  type: "Convolution"
  bottom: "conv3_3_bn"
  top: "conv3_4"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 144
    kernel_size: 1  pad: 0  stride: 1
    weight_filler { type: "xavier" }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
#layer {
#  name: "drop3_4"
#  type: "Dropout"
#  bottom: "conv3_4"
#  top: "conv3_4"
#  dropout_param { dropout_ratio: 0.5 }
#}
layer {
  name: "relu3_4"
  type: "ReLU"
  bottom: "conv3_4"
  top: "conv3_4"
}
layer {
  name: "conv3_4_bn"
  type: "BatchNorm"
  bottom: "conv3_4"
  top: "conv3_4_bn"
}


layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_4_bn"
  top: "pool3"
  pooling_param { pool: MAX  kernel_size: 2  stride: 2 }
}



## Conv 4
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 144
    kernel_size: 3  pad: 1  stride: 1
    weight_filler { type: "xavier" }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
#layer {
#  name: "drop4_1"
#  type: "Dropout"
#  bottom: "conv4_1"
#  top: "conv4_1"
#  dropout_param { dropout_ratio: 0.5 }
#}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_1_bn"
  type: "BatchNorm"
  bottom: "conv4_1"
  top: "conv4_1_bn"
}

layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1_bn"
  top: "conv4_2"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 144
    kernel_size: 3  pad: 1  stride: 1
    weight_filler { type: "xavier" }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
#layer {
#  name: "drop4_2"
#  type: "Dropout"
#  bottom: "conv4_2"
#  top: "conv4_2"
#  dropout_param { dropout_ratio: 0.5 }
#}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_2_bn"
  type: "BatchNorm"
  bottom: "conv4_2"
  top: "conv4_2_bn"
}

layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2_bn"
  top: "conv4_3"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 144
    kernel_size: 3  pad: 1  stride: 1
    weight_filler { type: "xavier" }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
#layer {
#  name: "drop4_3"
#  type: "Dropout"
#  bottom: "conv4_3"
#  top: "conv4_3"
#  dropout_param { dropout_ratio: 0.5 }
#}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "conv4_3_bn"
  type: "BatchNorm"
  bottom: "conv4_3"
  top: "conv4_3_bn"
}



## Conv5
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "conv4_3_bn"
  top: "conv5_1"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 256
    kernel_size: 3  pad: 1  stride: 1
    weight_filler { type: "xavier" }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
#layer {
#  name: "drop5_1"
#  type: "Dropout"
#  bottom: "conv5_1"
#  top: "conv5_1"
#  dropout_param { dropout_ratio: 0.5 }
#}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_1_bn"
  type: "BatchNorm"
  bottom: "conv5_1"
  top: "conv5_1_bn"
}


layer {
  name: "pool5_1"
  type: "Pooling"
  bottom: "conv5_1_bn"
  top: "pool5_1"
  pooling_param { pool: MAX  kernel_size: 2  stride: 1 }
}


layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "pool5_1"
  top: "conv5_2"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 384
    kernel_size: 1  pad: 0  stride: 1
    weight_filler { type: "xavier" }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
#layer {
#  name: "drop5_2"
#  type: "Dropout"
#  bottom: "conv5_2"
#  top: "conv5_2"
#  dropout_param { dropout_ratio: 0.5 }
#}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_2_bn"
  type: "BatchNorm"
  bottom: "conv5_2"
  top: "conv5_2_bn"
}


layer {
  name: "pool5_2"
  type: "Pooling"
  bottom: "conv5_2_bn"
  top: "pool5_2"
  pooling_param { pool: MAX  kernel_size: 2  stride: 1 }
}


layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "pool5_2"
  top: "conv5_3"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 512
    kernel_size: 1  pad: 0  stride: 1
    weight_filler { type: "xavier" }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
#layer {
#  name: "drop5_3"
#  type: "Dropout"
#  bottom: "conv5_3"
#  top: "conv5_3"
#  dropout_param { dropout_ratio: 0.5 }
#}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "conv5_3_bn"
  type: "BatchNorm"
  bottom: "conv5_3"
  top: "conv5_3_bn"
}


layer {
  name: "pool5_3"
  type: "Pooling"
  bottom: "conv5_3_bn"
  top: "pool5_3"
  pooling_param { pool: MAX  kernel_size: 2  stride: 2 }
}

 
################################################################################
## fc 6
################################################################################
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5_3"
  top: "fc6"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  inner_product_param {
    num_output: 2048
    weight_filler { type: "xavier"  std: 0.1 }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
#layer {
#  name: "drop6"
#  type: "Dropout"
#  bottom: "fc6"
#  top: "fc6"
#  dropout_param { dropout_ratio: 0.5 }
#}
layer {
  name: "fc6_bn"
  type: "BatchNorm"
  bottom: "fc6"
  top: "fc6_bn"
}


################################################################################
## fc 7
################################################################################
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6_bn"
  top: "fc7"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  inner_product_param {
    num_output: 2048
    weight_filler { type: "xavier"  std: 0.1 }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
#layer {
#  name: "drop7"
#  type: "Dropout"
#  bottom: "fc7"
#  top: "fc7"
#  dropout_param { dropout_ratio: 0.5 }
#}
layer {
  name: "fc7_bn"
  type: "BatchNorm"
  bottom: "fc7"
  top: "fc7_bn"
}

################################################################################
## fc 8
################################################################################
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7_bn"
  top: "fc8"
  param { lr_mult: 1  decay_mult: 1 }
  param { lr_mult: 2  decay_mult: 0 }
  inner_product_param {
    num_output: 1000
    weight_filler { type: "xavier"  std: 0.1 }
    bias_filler { type: "constant"  value: 0.1 }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
  accuracy_param {
    top_k: 1
  }
}
layer {
  name: "acc_top5"
  type: "Accuracy"
  bottom: "fc8"
  bottom: "label"
  top: "acc_top5"
  include {
    phase: TEST
  }
  accuracy_param {
    top_k: 5
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}
